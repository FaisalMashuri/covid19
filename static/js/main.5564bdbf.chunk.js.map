{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","LineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","option","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,SAAW,wBAAwB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NCgDlJC,EA3CD,SAAC,GAAsD,IAAD,IAApDC,KAAMC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,WAElD,OAAIH,EAKF,yBAAKI,UAAWC,IAAOC,WACrB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WAC3E,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAQ,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,IAAKC,UAAU,OAErE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,uCAGF,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YAC3E,kBAACiB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACE,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAQ,EAAGC,IAAKvB,EAAUwB,MAAOC,SAAU,IAAKC,UAAU,OAErE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBAC1D,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,0CAGF,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SAC3E,kBAACgB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACE,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAQ,EAAGC,IAAKtB,EAAOuB,MAAOC,SAAU,IAAKC,UAAU,OAElE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBAC1D,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,yCAjCC,c,yBCPLQ,EAAM,iCAECC,EAAS,uCAAG,WAAMC,GAAN,2BAAAC,EAAA,6DACnBC,EAAgBJ,EAEjBE,IACDE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJf,kBAO+CG,IAAMC,IAAIF,GAPzD,2BAObnC,KAAQC,EAPK,EAOLA,UAAWC,EAPN,EAOMA,UAAWC,EAPjB,EAOiBA,OAAQC,EAPzB,EAOyBA,WAPzB,kBASd,CAAEH,YAAWC,YAAWC,SAAQC,eATlB,kCAYrBkC,QAAQC,IAAR,MAZqB,0DAAH,sDAgBTC,EAAc,uCAAG,gCAAAN,EAAA,+EAGLE,IAAMC,IAAN,UAAaN,EAAb,WAHK,uBAGnB/B,EAHmB,EAGnBA,KAEDyC,EAAezC,EAAK0C,KAAI,SAACC,GAAD,MAAgB,CAC5C1C,UAAU0C,EAAU1C,UAAU2C,MAC9BzC,OAAOwC,EAAUxC,OAAOyC,MACxBC,KAAKF,EAAUG,eARS,kBAUnBL,GAVmB,gCAY1BH,QAAQC,IAAR,MAZ0B,yDAAH,qDAgBdQ,EAAc,uCAAG,8BAAAb,EAAA,+EAEME,IAAMC,IAAN,UAAaN,EAAb,eAFN,uBAEbiB,EAFa,EAEnBhD,KAAMgD,UACbV,QAAQC,IAAIS,GAHc,kBAInBA,EAAUN,KAAI,SAACT,GAAD,OAAaA,EAAQgB,SAJhB,gCAM1BX,QAAQC,IAAR,MAN0B,yDAAH,qD,yBC8BZW,EA7DD,SAAC,GAAkD,IAAD,IAAhDlD,KAAMC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,UAAUC,EAAqB,EAArBA,OAAS8B,EAAY,EAAZA,QAAY,EAC7BkB,mBAAS,IADoB,mBACxDR,EADwD,KAC7CS,EAD6C,KAG9DC,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbkB,EADa,SACMZ,IADN,6EAAH,qDAKdc,KACF,IAEF,IAAMC,EACiB,IAArBZ,EAAUa,OACN,kBAAC,IAAD,CAAMxD,KAAM,CACZyD,OAAOd,EAAUD,KAAI,qBAAEG,QACvBa,SAAS,CAAC,CACR1D,KAAK2C,EAAUD,KAAI,qBAAEzC,aACrB0D,MAAM,WACNC,YAAY,UACZC,MAAK,GACJ,CACD7D,KAAK2C,EAAUD,KAAI,qBAAEvC,UACrBwD,MAAM,SACNC,YAAY,MACZE,gBAAgB,oBAChBD,MAAK,OAEF,KAGLE,EACJ9D,EAEE,kBAAC,IAAD,CACED,KAAM,CACJyD,OAAO,CAAC,WAAY,YAAa,UACjCC,SAAS,CAAC,CACRC,MAAM,SACNG,gBAAgB,CACd,oBACA,oBACA,qBAEF9D,KAAK,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAGnDsC,OAAQ,CACNC,OAAQ,CAACC,SAAQ,GACjBC,MAAO,CAACD,SAAQ,EAAME,KAAK,oBAAD,OAAqBnC,OAGlD,KAEL,OACE,yBAAK5B,UAAWC,IAAOC,WAEpB0B,EAAU8B,EAAWR,I,mCCvCbc,EAlBO,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,oBAAwB,EACEnB,mBAAS,IADX,mBACvCoB,EADuC,KACrBC,EADqB,KAS9C,OAPAnB,qBAAU,YACM,uCAAG,sBAAAnB,EAAA,kEACfsC,EADe,SACWzB,IADX,6EAAH,qDAIdO,KACC,CAACkB,IAEF,kBAACC,EAAA,EAAD,CAAapE,UAAWC,IAAOoE,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOrD,SAC1E,4BAAQA,MAAM,UAAd,UACC6C,EAAiB7B,KAAI,SAACT,EAAQ+C,GAAT,OAAe,4BAAQC,IAAKD,EAAGtD,MAAOO,GAAUA,S,iBCqB/DiD,E,4MA9BbC,MAAQ,CACNnF,KAAK,GACLiC,QAAQ,I,EAUVqC,oB,uCAAsB,WAAMrC,GAAN,eAAAC,EAAA,sEACMF,EAAUC,GADhB,OACdmD,EADc,OAGpB,EAAKC,SAAS,CAACrF,KAAKoF,EAAanD,QAAQA,IAHrB,2C,wPANMD,I,OAApBoD,E,OAENE,KAAKD,SAAS,CAACrF,KAAMoF,I,qIAUd,IAAD,EACkBE,KAAKH,MAAtBnF,EADD,EACCA,KAAMiC,EADP,EACOA,QACb,OACE,yBAAK5B,UAAWC,IAAOC,WACrB,iDACA,kBAAC,EAAD,CAAOP,KAAMA,IACb,kBAAC,EAAD,CAAesE,oBAAqBgB,KAAKhB,sBACzC,kBAAC,EAAD,CAAOtE,KAAMA,EAAMiC,QAASA,S,GA1BlBsD,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCJjD9F,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCAhCD,EAAOC,QAAU,CAAC,UAAY,yB","file":"static/js/main.5564bdbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"continer\":\"Cards_continer__35X9P\",\"card\":\"Cards_card__2TKVb\",\"infected\":\"Cards_infected__2vKDE\",\"recovered\":\"Cards_recovered__1ulO2\",\"deaths\":\"Cards_deaths__2Jqu6\"};","import React from 'react';\r\nimport {Card , CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) =>{\r\n  \r\n  if(!confirmed){\r\n    return \"Loading...\"\r\n  }\r\n\r\n  return(\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify='center'>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n          <CardContent />\r\n          <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp start ={0} end={confirmed.value} duration={2.5} separator=\".\"  />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent />\r\n          <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start ={0} end={recovered.value} duration={2.5} separator=\".\"  />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent />\r\n          <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start ={0} end={deaths.value} duration={2.5} separator=\".\"  />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          <Typography variant=\"body2\">Number of Deaths cases of COVID-19</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n\r\n  )\r\n}\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async(country) =>{\r\n  let changeableUrl = url;\r\n\r\n  if(country){\r\n    changeableUrl = `${url}/countries/${country}`\r\n  }\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate};\r\n\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n\r\n  try{\r\n    const {data} = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed:dailyData.confirmed.total,\r\n      deaths:dailyData.deaths.total,\r\n      date:dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async() =>{\r\n  try{\r\n    const {data:{countries}} =await axios.get(`${url}/countries`)\r\n    console.log(countries);\r\n    return countries.map((country) => country.name)\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData} from '../../api'\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\nconst Chart = ({data:{confirmed, recovered,deaths}, country}) =>{\r\n  const[dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(()=>{\r\n      const fetchAPI = async() =>{\r\n          setDailyData(await fetchDailyData());\r\n      }\r\n\r\n\r\n      fetchAPI();\r\n  },[]);\r\n\r\n  const LineChart = (\r\n    dailyData.length !== 0\r\n    ?(  <Line data={{\r\n        labels:dailyData.map(({date}) => date),\r\n        datasets:[{\r\n          data:dailyData.map(({confirmed}) => confirmed),\r\n          label:'Infected',\r\n          borderColor:'#3333ff',\r\n          fill:true,\r\n        }, {\r\n          data:dailyData.map(({deaths}) => deaths),\r\n          label:'Deaths',\r\n          borderColor:'red',\r\n          backgroundColor:'rgba(255,0,0,0.5)',\r\n          fill:true,\r\n        }],\r\n      }} />):null\r\n  );\r\n\r\n  const barChart = (\r\n    confirmed\r\n    ? (\r\n      <Bar\r\n        data={{\r\n          labels:['Infected', 'Recovered', 'Deaths'],\r\n          datasets:[{\r\n            label:'People',\r\n            backgroundColor:[\r\n              'rgba(0,0,255,0.5)',\r\n              'rgba(0,255,0,0.5)',\r\n              'rgba(255,0,0,0.5)',\r\n            ],\r\n            data:[confirmed.value, recovered.value, deaths.value]\r\n          }]\r\n        }}\r\n        option={{\r\n          legend: {display:false},\r\n          title: {display:true, text:`Current state in ${country}`},\r\n        }}\r\n      />\r\n    ): null\r\n  )\r\n  return(\r\n    <div className={styles.container}>\r\n\r\n      {country ? barChart : LineChart}\r\n    </div>\r\n  )\r\n}\r\nexport default Chart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () =>{\r\n      setFetchedCountries(await fetchCountries());\r\n    }\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n  return(\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"global\">Global</option>\r\n        {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\nexport default CountryPicker;\r\n","import React, {Component} from 'react';\r\n//import Cards from './components/Cards/Cards';\r\n//import Chart from './components/Chart/Chart';\r\n//import CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport {Cards , Chart, CountryPicker} from './components'\r\nimport styles from './App.module.css'\r\nimport {fetchData} from './api';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data:{},\r\n    country:'',\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({data: fetchedData})\r\n\r\n  }\r\n\r\n  handleCountryChange = async(country) =>{\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({data:fetchedData, country:country})\r\n\r\n  }\r\n  render(){\r\n    const {data, country} = this.state;\r\n    return(\r\n      <div className={styles.container}>\r\n        <h1>Covid 19 Tracking</h1>\r\n        <Cards data={data}/>\r\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1GT8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3gJaU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container___2zhF\"};"],"sourceRoot":""}